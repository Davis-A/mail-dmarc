#!/usr/bin/perl
# VERSION
use strict;
use warnings;

use lib 'lib';
use Mail::DMARC::HTTP;
my $http = Mail::DMARC::HTTP->new;
$http->dmarc_httpd;
exit;

# ABSTRACT: a web server for viewing DMARC reports
# PODNAME: dmarc_httpd
__END__

=head1 SYNOPSIS

A HTTP interface for:

=over 4

=item * local DMARC reports

=item * DMARC validator service

=back

Start the HTTP server:

    dmarc_httpd

Connect with a web browser to L<http://localhost:8080|http://localhost:8080/>.

=head1 DESCRIPTION

The HTTP server handles 4 types of requests:

=over 4

=item * /

Serves files stored in the perl share directory of the Mail::DMARC module.
This presently entails one HTML file and a handful of CSS and JS files for
the report viewing feature.

=item * /dmarc/json/validate - DMARC validation requests

Accepts a JSON encoded HTTP POST request. Validates the request, performs a
DMARC validation and returns a JSON encoded result object. This is the API
for non-perl applications to utilize Mail::DMARC.

See the dmarc_http_client app for a usage example.

=item * /dmarc/json/report

Accepts AJAX requests from the browser and returns JSON encoded DMARC reports.

=item * /dmarc/json/row

Accepts AJAX requests from the browser and returns DMARC report rows.

=back

A L<Sample Report|http://search.cpan.org/dist/Mail-DMARC/example/report_cgi.png> is available which shows the web interface. It is implemented almost entirely in JavaScript, using jQuery, jQueryUI, and jqGrid.

Web server settings are in the [http] and [https] sections of mail-dmarc.ini.

=head1 THANKS

jQuery - http://www.jquery.com/

jqGrid - http://www.trirand.com/blog/

=cut
